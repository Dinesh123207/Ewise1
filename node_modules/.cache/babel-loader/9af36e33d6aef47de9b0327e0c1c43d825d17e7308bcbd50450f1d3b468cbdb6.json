{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ewise_Code\\\\Website_Chat\\\\Ewise-1\\\\src\\\\screens\\\\PricesonMarketplace.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Footer from '../components/Footer';\nimport Navbar from '../components/Navbar';\nimport '../styles/PricesonMarketplace.css';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport bg from \"../images/bg.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PricesonMarketplace() {\n  _s();\n  const form = useRef();\n  const [prices, setPrices] = useState([]);\n  const {\n    email\n  } = useParams();\n  const [selectedFilter, setSelectedFilter] = useState('repair');\n  const filterPrices = async selectedOption => {\n    try {\n      let apiUrl = '';\n      if (selectedOption === 'repair') {\n        apiUrl = 'http://localhost:5000/api/getPrices'; // Change to your repair endpoint\n      } else if (selectedOption === 'recycle') {\n        apiUrl = 'http://localhost:5000/api/getpricesRecycle'; // Change to your recycle endpoint\n      } else if (selectedOption === 'donate') {\n        apiUrl = 'http://localhost:5000/api/getpricesDonate'; // Change to your donate endpoint\n      }\n\n      const response = await fetch(apiUrl, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to fetch ${selectedOption} prices`);\n      }\n      const data = await response.json();\n      setPrices(data.prices);\n    } catch (error) {\n      console.error(`Error fetching ${selectedOption} prices:`, error);\n    }\n  };\n  const sendEmail = async email => {\n    try {\n      const res = await axios.post('http://localhost:5001/name', {\n        name: email\n      });\n      console.log(res);\n      console.log(\"hogaya\");\n\n      // Find the user by email in the prices array\n      const updatedPrices = prices.map(price => {\n        if (price.email === email) {\n          // Update the reward points for the specific user using immutability\n          const updatedPrice = {\n            ...price,\n            rewardPoints: (price.rewardPoints || 0) + 2,\n            sold: true\n          };\n          return updatedPrice;\n        }\n        return price;\n      });\n      setPrices(updatedPrices);\n\n      // Update rewardPoints in the database\n      await axios.post('http://localhost:5000/api/updatepoints', {\n        email,\n        points: 2\n      });\n    } catch (error) {\n      console.error(error, \"Error updating reward points\");\n    }\n    console.log(\"Sending email...\");\n  };\n  useEffect(() => {\n    filterPrices(selectedFilter); // Initial fetch based on default filter 'repair'\n  }, [email, selectedFilter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 90,\n        right: 60\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filterOptions\",\n        style: {\n          color: \"black\",\n          marginRight: \"15px\"\n        },\n        children: \"Filter: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"filterOptions\",\n        value: selectedFilter,\n        onChange: e => setSelectedFilter(e.target.value),\n        style: {\n          backgroundColor: \"white\",\n          color: \"black\",\n          padding: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"repair\",\n          children: \"Repair\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"recycle\",\n          children: \"Recycle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"donate\",\n          children: \"Donate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        width: '100%',\n        marginTop: '60px',\n        color: \"black\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Orders Recieved\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      ref: form,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: prices.map((price, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"5px solid #325343 \",\n            width: \"calc(50% - 20px)\",\n            // 50% width with margin\n            height: \"300px\",\n            borderRadius: \"15px\",\n            margin: \"10px\",\n            padding: \"28px 20px 50px 20px\",\n            backgroundColor: price.sold ? \"white\" : \"\",\n            boxShadow: price.sold ? \"0 0 5px rgba(0, 0, 0, 0.1)\" : \"\",\n            float: index % 2 === 0 ? \"left\" : \"right\",\n            // alternate float left/right\n            clear: index % 2 === 0 ? \"both\" : \"none\" // clear float on every even index\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            name: \"from_name\",\n            style: {\n              color: \"black\",\n              fontSize: \"20px\"\n            },\n            children: [\"Name: \", price.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 108\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            name: \"from_email\",\n            style: {\n              color: \"black\",\n              fontSize: \"20px\"\n            },\n            children: [\"Price: \", price.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"black\",\n              fontSize: \"20px\"\n            },\n            children: [\"Email: \", price.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), !price.sold && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'green',\n                fontSize: \"25px\"\n              },\n              children: \"Item Available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: e => {\n                e.preventDefault();\n                sendEmail(price.email);\n              },\n              style: {\n                color: \"black\",\n                fontSize: \"20px\"\n              },\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"black\",\n              fontSize: \"20px\",\n              margin: \"10px 5px 10px 5px\"\n            },\n            children: [\"Reward Points: \", price.rewardPoints !== undefined ? price.rewardPoints : 0, /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: `url(${bg}) no-repeat`,\n                marginLeft: \"5px\",\n                verticalAlign: \"middle\",\n                width: \"20px\",\n                height: \"20px\",\n                backgroundSize: \"cover\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 16\n          }, this), price.sold && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red',\n              fontSize: \"20px\"\n            },\n            children: \"Item Sold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 30\n          }, this)]\n        }, price._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n// import React, { useEffect, useRef, useState } from \"react\";\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n// import '../styles/PricesonMarketplace.css'; \n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n// import bg from \"../images/bg.png\";\n\n// export default function PricesonMarketplace() {\n//   const form = useRef();\n\n//   const [prices, setPrices] = useState([]);\n//   const { email } = useParams();\n\n//   const fetchPrices = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/getprices`, {\n//         method: 'GET',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch prices');\n//       }\n\n//       const data = await response.json();\n//       setPrices(data.prices);\n//     } catch (error) {\n//       console.error('Error fetching prices:', error);\n//     }\n//   };\n\n//   const sendEmail = async (email, type) => {\n//     try {\n//       const res = await axios.post('http://localhost:5001/name', { name: email, type });\n//       console.log(res);\n//       console.log(\"hogaya\");\n\n//       // Find the user by email in the prices array\n//       const updatedPrices = prices.map((price) => {\n//         if (price.email === email) {\n//           // Update the reward points and Status for the specific user using immutability\n//           const updatedPrice = {\n//             ...price,\n//             rewardPoints: (price.rewardPoints || 0) + 2,\n//             sold: true,\n//             Status: 'approved', // Set the Status to 'approved'\n//           };\n//           console.log('Status:', updatedPrice.Status);\n//           return updatedPrice;\n//         }\n//         return price;\n//       });\n//       setPrices(updatedPrices);\n\n//       await axios.post('http://localhost:5000/api/updatepoints', {\n//         email,\n//         points: 2,\n//       });\n\n//       await axios.post('http://localhost:5000/api/updatestatus', {\n//         email,\n//         status: 'approved',\n//       });\n\n//     } catch (error) {\n//       console.error(error, \"Error updating reward points or sending email\");\n//     }\n//     console.log(\"Sending email...\");\n//   };  \n\n//   useEffect(() => {\n//     fetchPrices();\n//   }, [email]);\n\n//   return (\n//     <div>\n//       <div>\n//         <Navbar />\n//       </div>\n\n//       <h1>Orders Received</h1>\n\n//       <form ref={form} >\n//         <div className='container'>\n//           {prices.map((price, index) => (\n//             <div\n//               key={price._id}\n//               style={{\n//                 border: \"5px solid #325343 \",\n//                 width: \"calc(50% - 20px)\", // 50% width with margin\n//                 height:\"300px\",\n//                 borderRadius: \"15px\",\n//                 margin: \"10px\",\n//                 padding: \"28px 20px 50px 20px\",\n//                 backgroundColor: price.sold ? \"white\" : \"\",\n//                 boxShadow: price.sold ? \"0 0 5px rgba(0, 0, 0, 0.1)\" : \"\",\n//                 float: index % 2 === 0 ? \"left\" : \"right\", // alternate float left/right\n//                 clear: index % 2 === 0 ? \"both\" : \"none\", // clear float on every even index\n//               }}\n//             >\n//               <label name=\"from_name\" style={{color: \"black\", fontSize: \"20px\"}}>Name: {price.name}</label><br></br>\n//               <label name=\"from_email\"  style={{color: \"black\", fontSize: \"20px\"}}>Price: {price.price}</label>\n//               <p  style={{color: \"black\", fontSize: \"20px\"}}>Email: {price.email}</p>\n//               {!price.sold && (\n//                 <>\n//                   <p style={{ color: 'green' , fontSize: \"25px\"}}>Item Available</p>\n//                   <button type=\"submit\" onClick={(e) => { e.preventDefault(); sendEmail(price.email, \"pickup\"); }}  style={{color: \"black\", fontSize: \"20px\"}}>Approve</button>\n//                 </>\n//               )}\n//                <p style={{ color: \"black\", fontSize: \"20px\", margin: \"10px 5px 10px 5px\" }}>\n//                   Reward Points: {price.rewardPoints !== undefined ? price.rewardPoints : 0}\n//                   <div style={{ background: `url(${bg}) no-repeat`, marginLeft: \"5px\", verticalAlign: \"middle\", width: \"20px\", height: \"20px\", backgroundSize: \"cover\" }}></div>\n//                 </p>\n\n//               {price.sold && <p style={{ color: 'red',  fontSize: \"20px\" }}>Item Sold</p>}\n//             </div>\n//           ))}\n//         </div>\n//       </form>\n\n//       <div>\n//         <Footer />\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useRef, useState } from \"react\";\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n// import '../styles/PricesonMarketplace.css'; \n// import { useParams } from 'react-router-dom';\n// import emailjs from '@emailjs/browser'\n// import axios from 'axios'\n\n// export default function PricesonMarketplace() {\n//   const form = useRef();\n\n//   //Done by the other method\n//   const sendEmail = async(email) => {\n//     try{\n//       const res = await axios.post('http://localhost:5001/name', {name: email})\n//       console.log(res)\n//       console.log(\"hogaya\")\n//     } catch(error) {\n//       console.log(error,\"snvjnfsovneijfnjenbirneobrjbvenbfvj\")\n//     }\n\n//     console.log(\"Sending email...\");\n//   };\n//   console.log(form.current);\n\n//   const [prices, setPrices] = useState([]);\n//   const { email } = useParams();\n\n//   const fetchPrices = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/getprices`, {\n//         method: 'GET',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch prices');\n//       }\n\n//       const data = await response.json();\n//       setPrices(data.prices);\n//     } catch (error) {\n//       console.error('Error fetching prices:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchPrices();\n//   }, [email]);\n\n//   return (\n//     <div>\n//       <div>\n//         <Navbar />\n//       </div>\n\n//       <h1>Orders Received</h1>\n\n//     <form ref={form} >\n//       <div className='container'>\n//         {prices.map((price) => (\n//           <div key={price._id} className='card'>\n//             <label name=\"from_name\">Name: {price.name}</label>\n//             <label name=\"from_email\">Price: {price.price}</label>\n//             <p>Email: {price.email}</p>\n//             <button type=\"submit\" onClick={(e) => { e.preventDefault(); sendEmail(price.email); }}>Approve</button>\n//           </div>\n//         ))}\n//       </div>\n//     </form>\n\n//       <div>\n//         <Footer />\n//       </div>\n//     </div>\n//   );\n// }\n\n//========================================================== Points added to all cards\n// import React, { useEffect, useRef, useState, useCallback } from \"react\";\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n// import '../styles/PricesonMarketplace.css'; \n// import { useParams } from 'react-router-dom';\n// import { useRewardPoints } from './RewardContext';\n// import axios from 'axios';\n\n// export default function PricesonMarketplace() {\n//   const form = useRef();\n//   const { state, dispatch } = useRewardPoints();\n\n//   const sendEmail = useCallback(async (email) => {\n//     try {\n//       const res = await axios.post('http://localhost:5001/name', { name: email });\n//       console.log(res);\n//       console.log('hogaya');\n//       dispatch({ type: 'INCREMENT_POINTS' });\n//     } catch (error) {\n//       console.log(error, 'snvjnfsovneijfnjenbirneobrjbvenbfvj');\n//     }\n\n//     console.log('Sending email...');\n//   }, [dispatch]);\n\n//   console.log(form.current);\n\n//   const [prices, setPrices] = useState([]);\n//   const { email } = useParams();\n\n//   const fetchPrices = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/getprices`, {\n//         method: 'GET',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch prices');\n//       }\n\n//       const data = await response.json();\n//       setPrices(data.prices);\n//     } catch (error) {\n//       console.error('Error fetching prices:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchPrices();\n//   }, [email]);\n\n//   return (\n//     <div>\n//       <div>\n//         <Navbar />\n//       </div>\n\n//       <h1>Orders Received</h1>\n\n//       <form ref={form}>\n//         <div className='container'>\n//           {prices.map((price) => (\n//             <div key={price._id} className='card'>\n//               <label name=\"from_name\">Name: {price.name}</label>\n//               <label name=\"from_email\">Price: {price.price}</label>\n//               <p>Email: {price.email}</p>\n//               <button type=\"submit\" onClick={(e) => {e.preventDefault(); sendEmail(price.email);}}>\n//                 Approve (Reward Points: {state.rewardPoints})\n//               </button>\n//             </div>\n//           ))}\n//         </div>\n//       </form>\n\n//       <div>\n//         <Footer />\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useRef, useState, useCallback } from \"react\";\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n// import '../styles/PricesonMarketplace.css'; \n// import { useParams } from 'react-router-dom';\n// import { useRewardPoints } from './RewardContext';\n// import axios from 'axios';\n\n// export default function PricesonMarketplace() {\n//   const form = useRef();\n//   const { state, dispatch } = useRewardPoints();\n\n//   const sendEmail = useCallback(async (email, cardId) => {\n//     try {\n//       const res = await axios.post('http://localhost:5001/name', { name: email });\n//       console.log(res);\n//       console.log('hogaya');\n//       dispatch({ type: 'INCREMENT_POINTS', cardId });\n//     } catch (error) {\n//       console.log(error, 'snvjnfsovneijfnjenbirneobrjbvenbfvj');\n//     }\n\n//     console.log('Sending email...');\n//   }, [dispatch]);\n\n//   console.log(form.current);\n\n//   const [prices, setPrices] = useState([]);\n//   const [rewardPointsMap, setRewardPointsMap] = useState({}); // Store reward points for each card\n//   const { email } = useParams();\n\n//   const fetchPrices = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/getprices`, {\n//         method: 'GET',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch prices');\n//       }\n\n//       const data = await response.json();\n//       setPrices(data.prices);\n//       // Initialize reward points map with default values\n//       const initialRewardPointsMap = {};\n//       data.prices.forEach((price) => {\n//         initialRewardPointsMap[price._id] = 0;\n//       });\n//       setRewardPointsMap(initialRewardPointsMap);\n//     } catch (error) {\n//       console.error('Error fetching prices:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchPrices();\n//   }, [email]);\n\n//   return (\n//     <div>\n//       <div>\n//         <Navbar />\n//       </div>\n\n//       <h1>Orders Received</h1>\n\n//       <form ref={form}>\n//         <div className='container'>\n//           {prices.map((price) => (\n//             <div key={price._id} className='card'>\n//               <label name=\"from_name\">Name: {price.name}</label>\n//               <label name=\"from_email\">Price: {price.price}</label>\n//               <p>Email: {price.email}</p>\n\n//             </div>\n//           ))}\n//         </div>\n//       </form>\n\n//       <div>\n//         <Footer />\n//       </div>\n//     </div>\n//   );\n// }\n\n//---------------------------------------------------------------------------------\n// import React, { useEffect, useRef, useState } from \"react\";\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n// import '../styles/PricesonMarketplace.css'; \n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// export default function PricesonMarketplace() {\n//   const form = useRef();\n\n//   const [prices, setPrices] = useState([]);\n//   const [counter, setCounter] = useState(0); // Total counter for all users\n//   const { email } = useParams();\n\n//   const fetchPrices = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/getprices`, {\n//         method: 'GET',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch prices');\n//       }\n\n//       const data = await response.json();\n//       setPrices(data.prices);\n//     } catch (error) {\n//       console.error('Error fetching prices:', error);\n//     }\n//   };\n\n//   const sendEmail = async (email) => {\n//     try {\n//       const res = await axios.post('http://localhost:5001/name', { name: email });\n//       console.log(res);\n//       console.log(\"hogaya\");\n\n//       // Find the user by email in the prices array\n//       const updatedPrices = prices.map((price) => {\n//         if (price.email === email) {\n//           // Update the reward points for the specific user using immutability\n//           return { ...price, rewardPoints: (price.rewardPoints || 0) + 2 };\n//         }\n//         return price;\n//       });\n\n//       setPrices(updatedPrices);\n//       setCounter(counter + 2); // Update the total counter\n\n//       // Update rewardPoints in the database\n//       await axios.post('http://localhost:5000/api/updatepoints', {\n//         email,\n//         points: 2,\n//       });\n\n//     } catch (error) {\n//       console.error(error, \"Error updating reward points\");\n//     }\n//     console.log(\"Sending email...\");\n//   };\n\n//   useEffect(() => {\n//     fetchPrices();\n//   }, [email]);\n\n//   return (\n//     <div>\n//       <div>\n//         <Navbar />\n//       </div>\n\n//       <h1>Orders Received</h1>\n\n//       <form ref={form} >\n//         <div className='container'>\n//           {prices.map((price) => (\n//             <div key={price._id} className='card'>\n//               <label name=\"from_name\">Name: {price.name}</label>\n//               <label name=\"from_email\">Price: {price.price}</label>\n//               <p>Email: {price.email}</p>\n//               <p>Reward Points: {price.rewardPoints || 0}</p>\n//               <button type=\"submit\" onClick={(e) => { e.preventDefault(); sendEmail(price.email); }}>Approve</button>\n//             </div>\n//           ))}\n//         </div>\n//       </form>\n\n//       <div>\n//         <Footer />\n//       </div>\n//     </div>\n//   );\n// }\n\n//-----------------------------Actual working\n// import React, { useEffect, useRef, useState } from \"react\";\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n// import '../styles/PricesonMarketplace.css'; \n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// export default function PricesonMarketplace() {\n//   const form = useRef();\n\n//   const [prices, setPrices] = useState([]);\n//   const { email } = useParams();\n\n//   const fetchPrices = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/getprices`, {\n//         method: 'GET',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch prices');\n//       }\n\n//       const data = await response.json();\n//       setPrices(data.prices);\n//     } catch (error) {\n//       console.error('Error fetching prices:', error);\n//     }\n//   };\n\n//   const sendEmail = async (email) => {\n//     try {\n//       const res = await axios.post('http://localhost:5001/name', { name: email });\n//       console.log(res);\n//       console.log(\"hogaya\");\n\n//       // Find the user by email in the prices array\n//       const updatedPrices = prices.map((price) => {\n//         if (price.email === email) {\n//           // Update the reward points for the specific user using immutability\n//           return { ...price, rewardPoints: (price.rewardPoints || 0) + 2 };\n//         }\n//         return price;\n//       });\n\n//       setPrices(updatedPrices);\n//       // No need to update the total counter here\n\n//       // Update rewardPoints in the database\n//       await axios.post('http://localhost:5000/api/updatepoints', {\n//         email,\n//         points: 2,\n//       });\n\n//     } catch (error) {\n//       console.error(error, \"Error updating reward points\");\n//     }\n//     console.log(\"Sending email...\");\n//   };\n\n//   useEffect(() => {\n//     fetchPrices();\n//   }, [email]);\n\n//   return (\n//     <div>\n//       <div>\n//         <Navbar />\n//       </div>\n\n//       <h1>Orders Received</h1>\n\n//       <form ref={form} >\n//         <div className='container'>\n//           {prices.map((price) => (\n//             <div key={price._id} className='card'>\n//               <label name=\"from_name\">Name: {price.name}</label>\n//               <label name=\"from_email\">Price: {price.price}</label>\n//               <p>Email: {price.email}</p>\n//               {/* Fetch and display reward points from the database */}\n//               <p>Reward Points: {price.rewardPoints !== undefined ? price.rewardPoints : 0}</p>\n//               <button type=\"submit\" onClick={(e) => { e.preventDefault(); sendEmail(price.email); }}>Approve</button>\n//             </div>\n//           ))}\n//         </div>\n//       </form>\n\n//       <div>\n//         <Footer />\n//       </div>\n//     </div>\n//   );\n// }\n\n//---Actual with sold\n// import React, { useEffect, useRef, useState } from \"react\";\n// import Footer from '../components/Footer';\n// import Navbar from '../components/Navbar';\n// import '../styles/PricesonMarketplace.css'; \n// import { useParams } from 'react-router-dom';\n// import axios from 'axios';\n\n// export default function PricesonMarketplace() {\n//   const form = useRef();\n\n//   const [prices, setPrices] = useState([]);\n//   const { email } = useParams();\n\n//   const fetchPrices = async () => {\n//     try {\n//       const response = await fetch(`http://localhost:5000/api/getprices`, {\n//         method: 'GET',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to fetch prices');\n//       }\n\n//       const data = await response.json();\n//       setPrices(data.prices);\n//     } catch (error) {\n//       console.error('Error fetching prices:', error);\n//     }\n//   };\n\n//   const sendEmail = async (email) => {\n//     try {\n//       const res = await axios.post('http://localhost:5001/name', { name: email });\n//       console.log(res);\n//       console.log(\"hogaya\");\n\n//       // Find the user by email in the prices array\n//       const updatedPrices = prices.map((price) => {\n//         if (price.email === email) {\n//           // Update the reward points for the specific user using immutability\n//           const updatedPrice = { ...price, rewardPoints: (price.rewardPoints || 0) + 2, sold: true };\n//           return updatedPrice;\n//         }\n//         return price;\n//       });\n\n//       setPrices(updatedPrices);\n\n//       // Update rewardPoints in the database\n//       await axios.post('http://localhost:5000/api/updatepoints', {\n//         email,\n//         points: 2,\n//       });\n\n//     } catch (error) {\n//       console.error(error, \"Error updating reward points\");\n//     }\n//     console.log(\"Sending email...\");\n//   };\n\n//   useEffect(() => {\n//     fetchPrices();\n//   }, [email]);\n\n//   return (\n//     <div>\n//       <div>\n//         <Navbar />\n//       </div>\n\n//       <h1>Orders Received</h1>\n\n//       <form ref={form} >\n//         <div className='container'>\n//           {prices.map((price) => (\n//             <div key={price._id} className='card'>\n//               <label name=\"from_name\">Name: {price.name}</label>\n//               <label name=\"from_email\">Price: {price.price}</label>\n//               <p>Email: {price.email}</p>\n//               {/* Fetch and display reward points from the database */}\n//               <p>Reward Points: {price.rewardPoints !== undefined ? price.rewardPoints : 0}</p>\n//               {price.sold && <p style={{ color: 'green' }}>Sold</p>}\n//               <button type=\"submit\" onClick={(e) => { e.preventDefault(); sendEmail(price.email); }}>Approve</button>\n//             </div>\n//           ))}\n//         </div>\n//       </form>\n\n//       <div>\n//         <Footer />\n//       </div>\n//     </div>\n//   );\n// }\n\n//----------------------------------More modified Sold\n_s(PricesonMarketplace, \"8Y1xDwCfXhnM2uXcFiyS+z+eONU=\", false, function () {\n  return [useParams];\n});\n_c = PricesonMarketplace;\nvar _c;\n$RefreshReg$(_c, \"PricesonMarketplace\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Footer","Navbar","useParams","axios","bg","jsxDEV","_jsxDEV","Fragment","_Fragment","PricesonMarketplace","_s","form","prices","setPrices","email","selectedFilter","setSelectedFilter","filterPrices","selectedOption","apiUrl","response","fetch","method","headers","ok","Error","data","json","error","console","sendEmail","res","post","name","log","updatedPrices","map","price","updatedPrice","rewardPoints","sold","points","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","top","right","htmlFor","color","marginRight","id","value","onChange","e","target","backgroundColor","padding","width","marginTop","ref","className","index","border","height","borderRadius","margin","boxShadow","float","clear","fontSize","type","onClick","preventDefault","undefined","background","marginLeft","verticalAlign","backgroundSize","_id","_c","$RefreshReg$"],"sources":["D:/Ewise_Code/Website_Chat/Ewise-1/src/screens/PricesonMarketplace.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Footer from '../components/Footer';\r\nimport Navbar from '../components/Navbar';\r\nimport '../styles/PricesonMarketplace.css'; \r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport bg from \"../images/bg.png\";\r\n\r\n\r\nexport default function PricesonMarketplace() {\r\n  const form = useRef();\r\n\r\n  const [prices, setPrices] = useState([]);\r\n  const { email } = useParams();\r\n  const [selectedFilter, setSelectedFilter] = useState('repair');\r\n\r\n\r\n\r\n\r\n  const filterPrices = async (selectedOption) => {\r\n    try {\r\n      let apiUrl = '';\r\n  \r\n      if (selectedOption === 'repair') {\r\n        apiUrl = 'http://localhost:5000/api/getPrices'; // Change to your repair endpoint\r\n      } else if (selectedOption === 'recycle') {\r\n        apiUrl = 'http://localhost:5000/api/getpricesRecycle'; // Change to your recycle endpoint\r\n      } \r\n      else if (selectedOption === 'donate') {\r\n        apiUrl = 'http://localhost:5000/api/getpricesDonate'; // Change to your donate endpoint\r\n      }\r\n  \r\n      const response = await fetch(apiUrl, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch ${selectedOption} prices`);\r\n      }\r\n  \r\n      const data = await response.json();\r\n      setPrices(data.prices);\r\n    } catch (error) {\r\n      console.error(`Error fetching ${selectedOption} prices:`, error);\r\n    }\r\n  };\r\n  \r\n  \r\n  const sendEmail = async (email) => {\r\n    try {\r\n      const res = await axios.post('http://localhost:5001/name', { name: email });\r\n      console.log(res);\r\n      console.log(\"hogaya\");\r\n  \r\n      // Find the user by email in the prices array\r\n      const updatedPrices = prices.map((price) => {\r\n        if (price.email === email) {\r\n          // Update the reward points for the specific user using immutability\r\n          const updatedPrice = { ...price, rewardPoints: (price.rewardPoints || 0) + 2, sold: true };\r\n          return updatedPrice;\r\n        }\r\n        return price;\r\n      });\r\n  \r\n      setPrices(updatedPrices);\r\n\r\n      // Update rewardPoints in the database\r\n      await axios.post('http://localhost:5000/api/updatepoints', {\r\n        email,\r\n        points: 2,\r\n      });\r\n  \r\n    } catch (error) {\r\n      console.error(error, \"Error updating reward points\");\r\n    }\r\n    console.log(\"Sending email...\");\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    filterPrices(selectedFilter); // Initial fetch based on default filter 'repair'\r\n  }, [email, selectedFilter]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Navbar />\r\n      </div>\r\n\r\n      <div style={{ position: 'absolute', top: 90, right: 60 }}>\r\n        <label htmlFor=\"filterOptions\" style = {{color: \"black\", marginRight: \"15px\"}}>Filter: </label>\r\n        <select\r\n          id=\"filterOptions\"\r\n          value={selectedFilter}\r\n          onChange={(e) => setSelectedFilter(e.target.value)}\r\n          style = {{backgroundColor: \"white\", color: \"black\", padding: \"5px\"}}\r\n        >\r\n          <option value=\"repair\">Repair</option>\r\n          <option value=\"recycle\">Recycle</option>\r\n          <option value=\"donate\">Donate</option>\r\n        </select>\r\n      </div>\r\n      <hr style={{ width: '100%', marginTop: '60px', color: \"black\" }} />\r\n\r\n      <h1><strong>Orders Recieved</strong></h1>\r\n\r\n      <form ref={form} >\r\n        <div className='container'>\r\n          {prices.map((price, index) => (\r\n            <div\r\n              key={price._id}\r\n              style={{\r\n                border: \"5px solid #325343 \",\r\n                width: \"calc(50% - 20px)\", // 50% width with margin\r\n                height:\"300px\",\r\n                borderRadius: \"15px\",\r\n                margin: \"10px\",\r\n                padding: \"28px 20px 50px 20px\",\r\n                backgroundColor: price.sold ? \"white\" : \"\",\r\n                boxShadow: price.sold ? \"0 0 5px rgba(0, 0, 0, 0.1)\" : \"\",\r\n                float: index % 2 === 0 ? \"left\" : \"right\", // alternate float left/right\r\n                clear: index % 2 === 0 ? \"both\" : \"none\", // clear float on every even index\r\n              }}\r\n            >\r\n              <label name=\"from_name\" style={{color: \"black\", fontSize: \"20px\"}}>Name: {price.name}</label><br></br>\r\n              <label name=\"from_email\"  style={{color: \"black\", fontSize: \"20px\"}}>Price: {price.price}</label>\r\n              <p  style={{color: \"black\", fontSize: \"20px\"}}>Email: {price.email}</p>\r\n              {!price.sold && (\r\n                <>\r\n                  <p style={{ color: 'green' , fontSize: \"25px\"}}>Item Available</p>\r\n                  <button type=\"submit\" onClick={(e) => { e.preventDefault(); sendEmail(price.email); }}  style={{color: \"black\", fontSize: \"20px\"}}>Approve</button>\r\n                </>\r\n              )}\r\n               <p style={{ color: \"black\", fontSize: \"20px\", margin: \"10px 5px 10px 5px\" }}>\r\n                  Reward Points: {price.rewardPoints !== undefined ? price.rewardPoints : 0}\r\n                  <div style={{ background: `url(${bg}) no-repeat`, marginLeft: \"5px\", verticalAlign: \"middle\", width: \"20px\", height: \"20px\", backgroundSize: \"cover\" }}></div>\r\n                </p>\r\n\r\n              {price.sold && <p style={{ color: 'red',  fontSize: \"20px\" }}>Item Sold</p>}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </form>\r\n\r\n      <div>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// import React, { useEffect, useRef, useState } from \"react\";\r\n// import Footer from '../components/Footer';\r\n// import Navbar from '../components/Navbar';\r\n// import '../styles/PricesonMarketplace.css'; \r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import bg from \"../images/bg.png\";\r\n\r\n\r\n// export default function PricesonMarketplace() {\r\n//   const form = useRef();\r\n\r\n//   const [prices, setPrices] = useState([]);\r\n//   const { email } = useParams();\r\n\r\n//   const fetchPrices = async () => {\r\n//     try {\r\n//       const response = await fetch(`http://localhost:5000/api/getprices`, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n  \r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch prices');\r\n//       }\r\n  \r\n//       const data = await response.json();\r\n//       setPrices(data.prices);\r\n//     } catch (error) {\r\n//       console.error('Error fetching prices:', error);\r\n//     }\r\n//   };\r\n  \r\n//   const sendEmail = async (email, type) => {\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5001/name', { name: email, type });\r\n//       console.log(res);\r\n//       console.log(\"hogaya\");\r\n  \r\n//       // Find the user by email in the prices array\r\n//       const updatedPrices = prices.map((price) => {\r\n//         if (price.email === email) {\r\n//           // Update the reward points and Status for the specific user using immutability\r\n//           const updatedPrice = {\r\n//             ...price,\r\n//             rewardPoints: (price.rewardPoints || 0) + 2,\r\n//             sold: true,\r\n//             Status: 'approved', // Set the Status to 'approved'\r\n//           };\r\n//           console.log('Status:', updatedPrice.Status);\r\n//           return updatedPrice;\r\n//         }\r\n//         return price;\r\n//       });\r\n//       setPrices(updatedPrices);\r\n\r\n//       await axios.post('http://localhost:5000/api/updatepoints', {\r\n//         email,\r\n//         points: 2,\r\n//       });\r\n\r\n//       await axios.post('http://localhost:5000/api/updatestatus', {\r\n//         email,\r\n//         status: 'approved',\r\n//       });\r\n  \r\n//     } catch (error) {\r\n//       console.error(error, \"Error updating reward points or sending email\");\r\n//     }\r\n//     console.log(\"Sending email...\");\r\n//   };  \r\n  \r\n//   useEffect(() => {\r\n//     fetchPrices();\r\n//   }, [email]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <Navbar />\r\n//       </div>\r\n\r\n//       <h1>Orders Received</h1>\r\n\r\n//       <form ref={form} >\r\n//         <div className='container'>\r\n//           {prices.map((price, index) => (\r\n//             <div\r\n//               key={price._id}\r\n//               style={{\r\n//                 border: \"5px solid #325343 \",\r\n//                 width: \"calc(50% - 20px)\", // 50% width with margin\r\n//                 height:\"300px\",\r\n//                 borderRadius: \"15px\",\r\n//                 margin: \"10px\",\r\n//                 padding: \"28px 20px 50px 20px\",\r\n//                 backgroundColor: price.sold ? \"white\" : \"\",\r\n//                 boxShadow: price.sold ? \"0 0 5px rgba(0, 0, 0, 0.1)\" : \"\",\r\n//                 float: index % 2 === 0 ? \"left\" : \"right\", // alternate float left/right\r\n//                 clear: index % 2 === 0 ? \"both\" : \"none\", // clear float on every even index\r\n//               }}\r\n//             >\r\n//               <label name=\"from_name\" style={{color: \"black\", fontSize: \"20px\"}}>Name: {price.name}</label><br></br>\r\n//               <label name=\"from_email\"  style={{color: \"black\", fontSize: \"20px\"}}>Price: {price.price}</label>\r\n//               <p  style={{color: \"black\", fontSize: \"20px\"}}>Email: {price.email}</p>\r\n//               {!price.sold && (\r\n//                 <>\r\n//                   <p style={{ color: 'green' , fontSize: \"25px\"}}>Item Available</p>\r\n//                   <button type=\"submit\" onClick={(e) => { e.preventDefault(); sendEmail(price.email, \"pickup\"); }}  style={{color: \"black\", fontSize: \"20px\"}}>Approve</button>\r\n//                 </>\r\n//               )}\r\n//                <p style={{ color: \"black\", fontSize: \"20px\", margin: \"10px 5px 10px 5px\" }}>\r\n//                   Reward Points: {price.rewardPoints !== undefined ? price.rewardPoints : 0}\r\n//                   <div style={{ background: `url(${bg}) no-repeat`, marginLeft: \"5px\", verticalAlign: \"middle\", width: \"20px\", height: \"20px\", backgroundSize: \"cover\" }}></div>\r\n//                 </p>\r\n\r\n//               {price.sold && <p style={{ color: 'red',  fontSize: \"20px\" }}>Item Sold</p>}\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </form>\r\n\r\n//       <div>\r\n//         <Footer />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// import React, { useEffect, useRef, useState } from \"react\";\r\n// import Footer from '../components/Footer';\r\n// import Navbar from '../components/Navbar';\r\n// import '../styles/PricesonMarketplace.css'; \r\n// import { useParams } from 'react-router-dom';\r\n// import emailjs from '@emailjs/browser'\r\n// import axios from 'axios'\r\n\r\n// export default function PricesonMarketplace() {\r\n//   const form = useRef();\r\n\r\n//   //Done by the other method\r\n//   const sendEmail = async(email) => {\r\n//     try{\r\n//       const res = await axios.post('http://localhost:5001/name', {name: email})\r\n//       console.log(res)\r\n//       console.log(\"hogaya\")\r\n//     } catch(error) {\r\n//       console.log(error,\"snvjnfsovneijfnjenbirneobrjbvenbfvj\")\r\n//     }\r\n    \r\n//     console.log(\"Sending email...\");\r\n//   };\r\n//   console.log(form.current);\r\n\r\n\r\n//   const [prices, setPrices] = useState([]);\r\n//   const { email } = useParams();\r\n\r\n//   const fetchPrices = async () => {\r\n//     try {\r\n//       const response = await fetch(`http://localhost:5000/api/getprices`, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Content-Type': 'application/json'\r\n//         },\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch prices');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       setPrices(data.prices);\r\n//     } catch (error) {\r\n//       console.error('Error fetching prices:', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchPrices();\r\n//   }, [email]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <Navbar />\r\n//       </div>\r\n\r\n//       <h1>Orders Received</h1>\r\n\r\n//     <form ref={form} >\r\n//       <div className='container'>\r\n//         {prices.map((price) => (\r\n//           <div key={price._id} className='card'>\r\n//             <label name=\"from_name\">Name: {price.name}</label>\r\n//             <label name=\"from_email\">Price: {price.price}</label>\r\n//             <p>Email: {price.email}</p>\r\n//             <button type=\"submit\" onClick={(e) => { e.preventDefault(); sendEmail(price.email); }}>Approve</button>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </form>\r\n\r\n\r\n//       <div>\r\n//         <Footer />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n//========================================================== Points added to all cards\r\n// import React, { useEffect, useRef, useState, useCallback } from \"react\";\r\n// import Footer from '../components/Footer';\r\n// import Navbar from '../components/Navbar';\r\n// import '../styles/PricesonMarketplace.css'; \r\n// import { useParams } from 'react-router-dom';\r\n// import { useRewardPoints } from './RewardContext';\r\n// import axios from 'axios';\r\n\r\n// export default function PricesonMarketplace() {\r\n//   const form = useRef();\r\n//   const { state, dispatch } = useRewardPoints();\r\n\r\n//   const sendEmail = useCallback(async (email) => {\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5001/name', { name: email });\r\n//       console.log(res);\r\n//       console.log('hogaya');\r\n//       dispatch({ type: 'INCREMENT_POINTS' });\r\n//     } catch (error) {\r\n//       console.log(error, 'snvjnfsovneijfnjenbirneobrjbvenbfvj');\r\n//     }\r\n\r\n//     console.log('Sending email...');\r\n//   }, [dispatch]);\r\n\r\n//   console.log(form.current);\r\n\r\n//   const [prices, setPrices] = useState([]);\r\n//   const { email } = useParams();\r\n\r\n//   const fetchPrices = async () => {\r\n//     try {\r\n//       const response = await fetch(`http://localhost:5000/api/getprices`, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Content-Type': 'application/json'\r\n//         },\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch prices');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       setPrices(data.prices);\r\n//     } catch (error) {\r\n//       console.error('Error fetching prices:', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchPrices();\r\n//   }, [email]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <Navbar />\r\n//       </div>\r\n\r\n//       <h1>Orders Received</h1>\r\n\r\n//       <form ref={form}>\r\n//         <div className='container'>\r\n//           {prices.map((price) => (\r\n//             <div key={price._id} className='card'>\r\n//               <label name=\"from_name\">Name: {price.name}</label>\r\n//               <label name=\"from_email\">Price: {price.price}</label>\r\n//               <p>Email: {price.email}</p>\r\n//               <button type=\"submit\" onClick={(e) => {e.preventDefault(); sendEmail(price.email);}}>\r\n//                 Approve (Reward Points: {state.rewardPoints})\r\n//               </button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </form>\r\n\r\n//       <div>\r\n//         <Footer />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n// import React, { useEffect, useRef, useState, useCallback } from \"react\";\r\n// import Footer from '../components/Footer';\r\n// import Navbar from '../components/Navbar';\r\n// import '../styles/PricesonMarketplace.css'; \r\n// import { useParams } from 'react-router-dom';\r\n// import { useRewardPoints } from './RewardContext';\r\n// import axios from 'axios';\r\n\r\n// export default function PricesonMarketplace() {\r\n//   const form = useRef();\r\n//   const { state, dispatch } = useRewardPoints();\r\n\r\n//   const sendEmail = useCallback(async (email, cardId) => {\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5001/name', { name: email });\r\n//       console.log(res);\r\n//       console.log('hogaya');\r\n//       dispatch({ type: 'INCREMENT_POINTS', cardId });\r\n//     } catch (error) {\r\n//       console.log(error, 'snvjnfsovneijfnjenbirneobrjbvenbfvj');\r\n//     }\r\n  \r\n//     console.log('Sending email...');\r\n//   }, [dispatch]);\r\n  \r\n//   console.log(form.current);\r\n\r\n//   const [prices, setPrices] = useState([]);\r\n//   const [rewardPointsMap, setRewardPointsMap] = useState({}); // Store reward points for each card\r\n//   const { email } = useParams();\r\n\r\n//   const fetchPrices = async () => {\r\n//     try {\r\n//       const response = await fetch(`http://localhost:5000/api/getprices`, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Content-Type': 'application/json'\r\n//         },\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch prices');\r\n//       }\r\n\r\n//       const data = await response.json();\r\n//       setPrices(data.prices);\r\n//       // Initialize reward points map with default values\r\n//       const initialRewardPointsMap = {};\r\n//       data.prices.forEach((price) => {\r\n//         initialRewardPointsMap[price._id] = 0;\r\n//       });\r\n//       setRewardPointsMap(initialRewardPointsMap);\r\n//     } catch (error) {\r\n//       console.error('Error fetching prices:', error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchPrices();\r\n//   }, [email]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <Navbar />\r\n//       </div>\r\n\r\n//       <h1>Orders Received</h1>\r\n\r\n//       <form ref={form}>\r\n//         <div className='container'>\r\n//           {prices.map((price) => (\r\n//             <div key={price._id} className='card'>\r\n//               <label name=\"from_name\">Name: {price.name}</label>\r\n//               <label name=\"from_email\">Price: {price.price}</label>\r\n//               <p>Email: {price.email}</p>\r\n              \r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </form>\r\n\r\n//       <div>\r\n//         <Footer />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n//---------------------------------------------------------------------------------\r\n// import React, { useEffect, useRef, useState } from \"react\";\r\n// import Footer from '../components/Footer';\r\n// import Navbar from '../components/Navbar';\r\n// import '../styles/PricesonMarketplace.css'; \r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// export default function PricesonMarketplace() {\r\n//   const form = useRef();\r\n\r\n//   const [prices, setPrices] = useState([]);\r\n//   const [counter, setCounter] = useState(0); // Total counter for all users\r\n//   const { email } = useParams();\r\n\r\n//   const fetchPrices = async () => {\r\n//     try {\r\n//       const response = await fetch(`http://localhost:5000/api/getprices`, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n  \r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch prices');\r\n//       }\r\n  \r\n//       const data = await response.json();\r\n//       setPrices(data.prices);\r\n//     } catch (error) {\r\n//       console.error('Error fetching prices:', error);\r\n//     }\r\n//   };\r\n  \r\n//   const sendEmail = async (email) => {\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5001/name', { name: email });\r\n//       console.log(res);\r\n//       console.log(\"hogaya\");\r\n  \r\n//       // Find the user by email in the prices array\r\n//       const updatedPrices = prices.map((price) => {\r\n//         if (price.email === email) {\r\n//           // Update the reward points for the specific user using immutability\r\n//           return { ...price, rewardPoints: (price.rewardPoints || 0) + 2 };\r\n//         }\r\n//         return price;\r\n//       });\r\n  \r\n//       setPrices(updatedPrices);\r\n//       setCounter(counter + 2); // Update the total counter\r\n  \r\n//       // Update rewardPoints in the database\r\n//       await axios.post('http://localhost:5000/api/updatepoints', {\r\n//         email,\r\n//         points: 2,\r\n//       });\r\n  \r\n//     } catch (error) {\r\n//       console.error(error, \"Error updating reward points\");\r\n//     }\r\n//     console.log(\"Sending email...\");\r\n//   };\r\n  \r\n\r\n//   useEffect(() => {\r\n//     fetchPrices();\r\n//   }, [email]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <Navbar />\r\n//       </div>\r\n\r\n//       <h1>Orders Received</h1>\r\n\r\n//       <form ref={form} >\r\n//         <div className='container'>\r\n//           {prices.map((price) => (\r\n//             <div key={price._id} className='card'>\r\n//               <label name=\"from_name\">Name: {price.name}</label>\r\n//               <label name=\"from_email\">Price: {price.price}</label>\r\n//               <p>Email: {price.email}</p>\r\n//               <p>Reward Points: {price.rewardPoints || 0}</p>\r\n//               <button type=\"submit\" onClick={(e) => { e.preventDefault(); sendEmail(price.email); }}>Approve</button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </form>\r\n\r\n//       <div>\r\n//         <Footer />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n//-----------------------------Actual working\r\n// import React, { useEffect, useRef, useState } from \"react\";\r\n// import Footer from '../components/Footer';\r\n// import Navbar from '../components/Navbar';\r\n// import '../styles/PricesonMarketplace.css'; \r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// export default function PricesonMarketplace() {\r\n//   const form = useRef();\r\n\r\n//   const [prices, setPrices] = useState([]);\r\n//   const { email } = useParams();\r\n\r\n//   const fetchPrices = async () => {\r\n//     try {\r\n//       const response = await fetch(`http://localhost:5000/api/getprices`, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n  \r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch prices');\r\n//       }\r\n  \r\n//       const data = await response.json();\r\n//       setPrices(data.prices);\r\n//     } catch (error) {\r\n//       console.error('Error fetching prices:', error);\r\n//     }\r\n//   };\r\n  \r\n//   const sendEmail = async (email) => {\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5001/name', { name: email });\r\n//       console.log(res);\r\n//       console.log(\"hogaya\");\r\n  \r\n//       // Find the user by email in the prices array\r\n//       const updatedPrices = prices.map((price) => {\r\n//         if (price.email === email) {\r\n//           // Update the reward points for the specific user using immutability\r\n//           return { ...price, rewardPoints: (price.rewardPoints || 0) + 2 };\r\n//         }\r\n//         return price;\r\n//       });\r\n  \r\n//       setPrices(updatedPrices);\r\n//       // No need to update the total counter here\r\n\r\n//       // Update rewardPoints in the database\r\n//       await axios.post('http://localhost:5000/api/updatepoints', {\r\n//         email,\r\n//         points: 2,\r\n//       });\r\n  \r\n//     } catch (error) {\r\n//       console.error(error, \"Error updating reward points\");\r\n//     }\r\n//     console.log(\"Sending email...\");\r\n//   };\r\n  \r\n\r\n//   useEffect(() => {\r\n//     fetchPrices();\r\n//   }, [email]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <Navbar />\r\n//       </div>\r\n\r\n//       <h1>Orders Received</h1>\r\n\r\n//       <form ref={form} >\r\n//         <div className='container'>\r\n//           {prices.map((price) => (\r\n//             <div key={price._id} className='card'>\r\n//               <label name=\"from_name\">Name: {price.name}</label>\r\n//               <label name=\"from_email\">Price: {price.price}</label>\r\n//               <p>Email: {price.email}</p>\r\n//               {/* Fetch and display reward points from the database */}\r\n//               <p>Reward Points: {price.rewardPoints !== undefined ? price.rewardPoints : 0}</p>\r\n//               <button type=\"submit\" onClick={(e) => { e.preventDefault(); sendEmail(price.email); }}>Approve</button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </form>\r\n\r\n//       <div>\r\n//         <Footer />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n//---Actual with sold\r\n// import React, { useEffect, useRef, useState } from \"react\";\r\n// import Footer from '../components/Footer';\r\n// import Navbar from '../components/Navbar';\r\n// import '../styles/PricesonMarketplace.css'; \r\n// import { useParams } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\n// export default function PricesonMarketplace() {\r\n//   const form = useRef();\r\n\r\n//   const [prices, setPrices] = useState([]);\r\n//   const { email } = useParams();\r\n\r\n//   const fetchPrices = async () => {\r\n//     try {\r\n//       const response = await fetch(`http://localhost:5000/api/getprices`, {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//       });\r\n  \r\n//       if (!response.ok) {\r\n//         throw new Error('Failed to fetch prices');\r\n//       }\r\n  \r\n//       const data = await response.json();\r\n//       setPrices(data.prices);\r\n//     } catch (error) {\r\n//       console.error('Error fetching prices:', error);\r\n//     }\r\n//   };\r\n  \r\n//   const sendEmail = async (email) => {\r\n//     try {\r\n//       const res = await axios.post('http://localhost:5001/name', { name: email });\r\n//       console.log(res);\r\n//       console.log(\"hogaya\");\r\n  \r\n//       // Find the user by email in the prices array\r\n//       const updatedPrices = prices.map((price) => {\r\n//         if (price.email === email) {\r\n//           // Update the reward points for the specific user using immutability\r\n//           const updatedPrice = { ...price, rewardPoints: (price.rewardPoints || 0) + 2, sold: true };\r\n//           return updatedPrice;\r\n//         }\r\n//         return price;\r\n//       });\r\n  \r\n//       setPrices(updatedPrices);\r\n\r\n//       // Update rewardPoints in the database\r\n//       await axios.post('http://localhost:5000/api/updatepoints', {\r\n//         email,\r\n//         points: 2,\r\n//       });\r\n  \r\n//     } catch (error) {\r\n//       console.error(error, \"Error updating reward points\");\r\n//     }\r\n//     console.log(\"Sending email...\");\r\n//   };\r\n  \r\n\r\n//   useEffect(() => {\r\n//     fetchPrices();\r\n//   }, [email]);\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <Navbar />\r\n//       </div>\r\n\r\n//       <h1>Orders Received</h1>\r\n\r\n//       <form ref={form} >\r\n//         <div className='container'>\r\n//           {prices.map((price) => (\r\n//             <div key={price._id} className='card'>\r\n//               <label name=\"from_name\">Name: {price.name}</label>\r\n//               <label name=\"from_email\">Price: {price.price}</label>\r\n//               <p>Email: {price.email}</p>\r\n//               {/* Fetch and display reward points from the database */}\r\n//               <p>Reward Points: {price.rewardPoints !== undefined ? price.rewardPoints : 0}</p>\r\n//               {price.sold && <p style={{ color: 'green' }}>Sold</p>}\r\n//               <button type=\"submit\" onClick={(e) => { e.preventDefault(); sendEmail(price.email); }}>Approve</button>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </form>\r\n\r\n//       <div>\r\n//         <Footer />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n//----------------------------------More modified Sold\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,mCAAmC;AAC1C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGlC,eAAe,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC5C,MAAMC,IAAI,GAAGb,MAAM,CAAC,CAAC;EAErB,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM;IAAEe;EAAM,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,QAAQ,CAAC;EAK9D,MAAMkB,YAAY,GAAG,MAAOC,cAAc,IAAK;IAC7C,IAAI;MACF,IAAIC,MAAM,GAAG,EAAE;MAEf,IAAID,cAAc,KAAK,QAAQ,EAAE;QAC/BC,MAAM,GAAG,qCAAqC,CAAC,CAAC;MAClD,CAAC,MAAM,IAAID,cAAc,KAAK,SAAS,EAAE;QACvCC,MAAM,GAAG,4CAA4C,CAAC,CAAC;MACzD,CAAC,MACI,IAAID,cAAc,KAAK,QAAQ,EAAE;QACpCC,MAAM,GAAG,2CAA2C,CAAC,CAAC;MACxD;;MAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,MAAM,EAAE;QACnCG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,mBAAkBP,cAAe,SAAQ,CAAC;MAC7D;MAEA,MAAMQ,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCd,SAAS,CAACa,IAAI,CAACd,MAAM,CAAC;IACxB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAE,kBAAiBV,cAAe,UAAS,EAAEU,KAAK,CAAC;IAClE;EACF,CAAC;EAGD,MAAME,SAAS,GAAG,MAAOhB,KAAK,IAAK;IACjC,IAAI;MACF,MAAMiB,GAAG,GAAG,MAAM5B,KAAK,CAAC6B,IAAI,CAAC,4BAA4B,EAAE;QAAEC,IAAI,EAAEnB;MAAM,CAAC,CAAC;MAC3Ee,OAAO,CAACK,GAAG,CAACH,GAAG,CAAC;MAChBF,OAAO,CAACK,GAAG,CAAC,QAAQ,CAAC;;MAErB;MACA,MAAMC,aAAa,GAAGvB,MAAM,CAACwB,GAAG,CAAEC,KAAK,IAAK;QAC1C,IAAIA,KAAK,CAACvB,KAAK,KAAKA,KAAK,EAAE;UACzB;UACA,MAAMwB,YAAY,GAAG;YAAE,GAAGD,KAAK;YAAEE,YAAY,EAAE,CAACF,KAAK,CAACE,YAAY,IAAI,CAAC,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAK,CAAC;UAC1F,OAAOF,YAAY;QACrB;QACA,OAAOD,KAAK;MACd,CAAC,CAAC;MAEFxB,SAAS,CAACsB,aAAa,CAAC;;MAExB;MACA,MAAMhC,KAAK,CAAC6B,IAAI,CAAC,wCAAwC,EAAE;QACzDlB,KAAK;QACL2B,MAAM,EAAE;MACV,CAAC,CAAC;IAEJ,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,EAAE,8BAA8B,CAAC;IACtD;IACAC,OAAO,CAACK,GAAG,CAAC,kBAAkB,CAAC;EACjC,CAAC;EAGDrC,SAAS,CAAC,MAAM;IACdoB,YAAY,CAACF,cAAc,CAAC,CAAC,CAAC;EAChC,CAAC,EAAE,CAACD,KAAK,EAAEC,cAAc,CAAC,CAAC;EAG3B,oBACET,OAAA;IAAAoC,QAAA,gBACEpC,OAAA;MAAAoC,QAAA,eACEpC,OAAA,CAACL,MAAM;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eAENxC,OAAA;MAAKyC,KAAK,EAAE;QAAEC,QAAQ,EAAE,UAAU;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAE;MAAAR,QAAA,gBACvDpC,OAAA;QAAO6C,OAAO,EAAC,eAAe;QAACJ,KAAK,EAAI;UAACK,KAAK,EAAE,OAAO;UAAEC,WAAW,EAAE;QAAM,CAAE;QAAAX,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/FxC,OAAA;QACEgD,EAAE,EAAC,eAAe;QAClBC,KAAK,EAAExC,cAAe;QACtByC,QAAQ,EAAGC,CAAC,IAAKzC,iBAAiB,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACnDR,KAAK,EAAI;UAACY,eAAe,EAAE,OAAO;UAAEP,KAAK,EAAE,OAAO;UAAEQ,OAAO,EAAE;QAAK,CAAE;QAAAlB,QAAA,gBAEpEpC,OAAA;UAAQiD,KAAK,EAAC,QAAQ;UAAAb,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtCxC,OAAA;UAAQiD,KAAK,EAAC,SAAS;UAAAb,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxCxC,OAAA;UAAQiD,KAAK,EAAC,QAAQ;UAAAb,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNxC,OAAA;MAAIyC,KAAK,EAAE;QAAEc,KAAK,EAAE,MAAM;QAAEC,SAAS,EAAE,MAAM;QAAEV,KAAK,EAAE;MAAQ;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEnExC,OAAA;MAAAoC,QAAA,eAAIpC,OAAA;QAAAoC,QAAA,EAAQ;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzCxC,OAAA;MAAMyD,GAAG,EAAEpD,IAAK;MAAA+B,QAAA,eACdpC,OAAA;QAAK0D,SAAS,EAAC,WAAW;QAAAtB,QAAA,EACvB9B,MAAM,CAACwB,GAAG,CAAC,CAACC,KAAK,EAAE4B,KAAK,kBACvB3D,OAAA;UAEEyC,KAAK,EAAE;YACLmB,MAAM,EAAE,oBAAoB;YAC5BL,KAAK,EAAE,kBAAkB;YAAE;YAC3BM,MAAM,EAAC,OAAO;YACdC,YAAY,EAAE,MAAM;YACpBC,MAAM,EAAE,MAAM;YACdT,OAAO,EAAE,qBAAqB;YAC9BD,eAAe,EAAEtB,KAAK,CAACG,IAAI,GAAG,OAAO,GAAG,EAAE;YAC1C8B,SAAS,EAAEjC,KAAK,CAACG,IAAI,GAAG,4BAA4B,GAAG,EAAE;YACzD+B,KAAK,EAAEN,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG,OAAO;YAAE;YAC3CO,KAAK,EAAEP,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG,MAAM,CAAE;UAC5C,CAAE;UAAAvB,QAAA,gBAEFpC,OAAA;YAAO2B,IAAI,EAAC,WAAW;YAACc,KAAK,EAAE;cAACK,KAAK,EAAE,OAAO;cAAEqB,QAAQ,EAAE;YAAM,CAAE;YAAA/B,QAAA,GAAC,QAAM,EAACL,KAAK,CAACJ,IAAI;UAAA;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAAAxC,OAAA;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtGxC,OAAA;YAAO2B,IAAI,EAAC,YAAY;YAAEc,KAAK,EAAE;cAACK,KAAK,EAAE,OAAO;cAAEqB,QAAQ,EAAE;YAAM,CAAE;YAAA/B,QAAA,GAAC,SAAO,EAACL,KAAK,CAACA,KAAK;UAAA;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjGxC,OAAA;YAAIyC,KAAK,EAAE;cAACK,KAAK,EAAE,OAAO;cAAEqB,QAAQ,EAAE;YAAM,CAAE;YAAA/B,QAAA,GAAC,SAAO,EAACL,KAAK,CAACvB,KAAK;UAAA;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACtE,CAACT,KAAK,CAACG,IAAI,iBACVlC,OAAA,CAAAE,SAAA;YAAAkC,QAAA,gBACEpC,OAAA;cAAGyC,KAAK,EAAE;gBAAEK,KAAK,EAAE,OAAO;gBAAGqB,QAAQ,EAAE;cAAM,CAAE;cAAA/B,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAClExC,OAAA;cAAQoE,IAAI,EAAC,QAAQ;cAACC,OAAO,EAAGlB,CAAC,IAAK;gBAAEA,CAAC,CAACmB,cAAc,CAAC,CAAC;gBAAE9C,SAAS,CAACO,KAAK,CAACvB,KAAK,CAAC;cAAE,CAAE;cAAEiC,KAAK,EAAE;gBAACK,KAAK,EAAE,OAAO;gBAAEqB,QAAQ,EAAE;cAAM,CAAE;cAAA/B,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,eACnJ,CACH,eACAxC,OAAA;YAAGyC,KAAK,EAAE;cAAEK,KAAK,EAAE,OAAO;cAAEqB,QAAQ,EAAE,MAAM;cAAEJ,MAAM,EAAE;YAAoB,CAAE;YAAA3B,QAAA,GAAC,iBAC3D,EAACL,KAAK,CAACE,YAAY,KAAKsC,SAAS,GAAGxC,KAAK,CAACE,YAAY,GAAG,CAAC,eACzEjC,OAAA;cAAKyC,KAAK,EAAE;gBAAE+B,UAAU,EAAG,OAAM1E,EAAG,aAAY;gBAAE2E,UAAU,EAAE,KAAK;gBAAEC,aAAa,EAAE,QAAQ;gBAAEnB,KAAK,EAAE,MAAM;gBAAEM,MAAM,EAAE,MAAM;gBAAEc,cAAc,EAAE;cAAQ;YAAE;cAAAtC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7J,CAAC,EAELT,KAAK,CAACG,IAAI,iBAAIlC,OAAA;YAAGyC,KAAK,EAAE;cAAEK,KAAK,EAAE,KAAK;cAAGqB,QAAQ,EAAE;YAAO,CAAE;YAAA/B,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,GA5BtET,KAAK,CAAC6C,GAAG;UAAAvC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA6BX,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAEPxC,OAAA;MAAAoC,QAAA,eACEpC,OAAA,CAACN,MAAM;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAApC,EAAA,CAj0BwBD,mBAAmB;EAAA,QAIvBP,SAAS;AAAA;AAAAiF,EAAA,GAJL1E,mBAAmB;AAAA,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}